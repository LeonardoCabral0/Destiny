{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Destiny/destiny/src/Components/PageBuscar/PageBuscar.js\";\n//React\nimport React from 'react';\n\n//CSS\nimport './PageBusca.css';\n\n//Components\nimport Buscar from \"../Buscar/Buscar\";\nimport Header from \"../Header/Header\";\nimport Posts from \"../Posts/Posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class PageBuscar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allPosts: [],\n      searchValue: ''\n    };\n    this.handleChangeSearchValue = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        searchValue: value\n      });\n    };\n    this.requestAllPost = () => {\n      fetch('http://localhost:5151/Posts').then(response => response.json()).then(data => {\n        console.log(data);\n        this.setState({\n          allPosts: data\n        });\n      });\n    };\n  }\n  componentDidMount() {\n    this.requestAllPost();\n  }\n  render() {\n    const {\n      allPosts,\n      searchValue\n    } = this.state;\n    const filtredPosts = !!searchValue ? allPosts.filter(post => {\n      return post.nome.toLowerCase().includes(searchValue.toLowerCase());\n    }) : allPosts;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Buscar, {\n        value: searchValue,\n        handleChangeSearchValue: this.handleChangeSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        allPosts: filtredPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), !(filtredPosts === 0) && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"notfound\",\n        children: \"Nenhum resultado foi encontrado...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","Buscar","Header","Posts","jsxDEV","_jsxDEV","Fragment","_Fragment","PageBuscar","Component","constructor","args","state","allPosts","searchValue","handleChangeSearchValue","e","value","target","setState","requestAllPost","fetch","then","response","json","data","console","log","componentDidMount","render","filtredPosts","filter","post","nome","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/home/leonardo/Destiny/destiny/src/Components/PageBuscar/PageBuscar.js"],"sourcesContent":["//React\nimport React from 'react';\n\n//CSS\nimport './PageBusca.css'\n\n//Components\nimport Buscar from \"../Buscar/Buscar\";\nimport Header from \"../Header/Header\";\nimport Posts from \"../Posts/Posts\";\n\nexport default class PageBuscar extends React.Component {\n    state = {\n        allPosts: [],\n        searchValue: ''\n    }\n\n    handleChangeSearchValue = e => {\n        const { value } = e.target\n        this.setState({ searchValue: value })\n    }\n\n    requestAllPost = () => {\n        fetch('http://localhost:5151/Posts')\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                this.setState({ allPosts: data })\n            })\n    }\n\n    componentDidMount() {\n        this.requestAllPost()\n    }\n\n    render() {\n        const { allPosts, searchValue } = this.state\n        \n        const filtredPosts = !!searchValue ? \n        (\n            allPosts.filter(post =>{\n                return post.nome.toLowerCase().includes(searchValue.toLowerCase())\n            })\n        )\n        : allPosts\n        return (\n            <>\n                <Header />\n                <Buscar \n                value={searchValue}\n                handleChangeSearchValue={this.handleChangeSearchValue} \n                />\n                <Posts allPosts={filtredPosts} />\n                {!(filtredPosts  === 0) && <h1 className=\"notfound\">Nenhum resultado foi encontrado...</h1>}\n            </>\n        )\n    }\n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,iBAAiB;;AAExB;AACA,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,eAAe,MAAMC,UAAU,SAASR,KAAK,CAACS,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACpDC,KAAK,GAAG;MACJC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;IACjB,CAAC;IAAA,KAEDC,uBAAuB,GAAGC,CAAC,IAAI;MAC3B,MAAM;QAAEC;MAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;MAC1B,IAAI,CAACC,QAAQ,CAAC;QAAEL,WAAW,EAAEG;MAAM,CAAC,CAAC;IACzC,CAAC;IAAA,KAEDG,cAAc,GAAG,MAAM;MACnBC,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACN,QAAQ,CAAC;UAAEN,QAAQ,EAAEY;QAAK,CAAC,CAAC;MACrC,CAAC,CAAC;IACV,CAAC;EAAA;EAEDG,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACR,cAAc,CAAC,CAAC;EACzB;EAEAS,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEhB,QAAQ;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACF,KAAK;IAE5C,MAAMkB,YAAY,GAAG,CAAC,CAAChB,WAAW,GAE9BD,QAAQ,CAACkB,MAAM,CAACC,IAAI,IAAG;MACnB,OAAOA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,GAEJrB,QAAQ;IACV,oBACIR,OAAA,CAAAE,SAAA;MAAA6B,QAAA,gBACI/B,OAAA,CAACH,MAAM;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVnC,OAAA,CAACJ,MAAM;QACPgB,KAAK,EAAEH,WAAY;QACnBC,uBAAuB,EAAE,IAAI,CAACA;MAAwB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACFnC,OAAA,CAACF,KAAK;QAACU,QAAQ,EAAEiB;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChC,EAAEV,YAAY,KAAM,CAAC,CAAC,iBAAIzB,OAAA;QAAIoC,SAAS,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAC7F,CAAC;EAEX;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}